#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative "lexer"

require_relative "nodes"

module Sol

class Parser < Racc::Parser

module_eval(<<'...end grammar.y/module_eval...', 'grammar.y', 158)

		# This code will be puts as-is in the Parser class
		def parse(input, show_tokens=true)

			@tokens = Sol::Lexer.new.tokenise(input) # Tokenise the code using our lexer

			puts @tokens.inspect if show_tokens

			do_parse # Kickoff the parsing process

		end

		def next_token

			@tokens.shift

		end

...end grammar.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    23,    22,    13,    15,    16,    17,    18,    19,    20,    21,
    23,    22,    13,    15,    16,    17,    18,    19,    20,    21,
    27,    65,    38,    39,    36,    37,    12,    27,    14,    27,
    78,    38,    39,    36,    37,    70,    12,    79,    14,    23,
    22,    13,    15,    16,    17,    18,    19,    20,    21,    23,
    22,    13,    15,    16,    17,    18,    19,    20,    21,    27,
    72,    38,    39,    36,    37,    12,    27,    14,    38,    39,
    36,    37,    42,    68,    41,    12,    27,    14,    23,    22,
    47,    15,    16,    17,    18,    19,    20,    21,    23,    22,
    46,    15,    16,    17,    18,    19,    20,    21,    27,    44,
    38,    39,    23,    22,    12,    15,    16,    17,    18,    19,
    20,    21,    23,    22,    12,    15,    16,    17,    18,    19,
    20,    21,    27,    43,    38,    39,    23,    22,    12,    15,
    16,    17,    18,    19,    20,    21,    23,    22,    12,    15,
    16,    17,    18,    19,    20,    21,    70,    77,    69,    76,
    23,    22,    12,    15,    16,    17,    18,    19,    20,    21,
    23,    22,    12,    15,    16,    17,    18,    19,    20,    21,
    24,    67,    81,   nil,    23,    22,    12,    15,    16,    17,
    18,    19,    20,    21,    23,    22,    12,    15,    16,    17,
    18,    19,    20,    21,   nil,   nil,   nil,   nil,    23,    22,
    12,    15,    16,    17,    18,    19,    20,    21,    23,    22,
    12,    15,    16,    17,    18,    19,    20,    21,   nil,   nil,
   nil,   nil,    23,    22,    12,    15,    16,    17,    18,    19,
    20,    21,    23,    22,    12,    15,    16,    17,    18,    19,
    20,    21,   nil,   nil,   nil,   nil,    23,    22,    12,    15,
    16,    17,    18,    19,    20,    21,    23,    22,    12,    15,
    16,    17,    18,    19,    20,    21,   nil,   nil,   nil,   nil,
    23,    22,    12,    15,    16,    17,    18,    19,    20,    21,
    23,    22,    12,    15,    16,    17,    18,    19,    20,    21,
   nil,   nil,   nil,   nil,    23,    22,    12,    15,    16,    17,
    18,    19,    20,    21,   nil,    27,    12,    38,    39,    36,
    37,    32,    33,    34,    35,    30,    31,    29,    28,   nil,
    12,   nil,   nil,    27,    67,    38,    39,    36,    37,    32,
    33,    34,    35,    30,    31,    29,    28,   nil,   nil,    27,
    60,    38,    39,    36,    37,    32,    33,    34,    35,    30,
    31,    29,    28,    27,   nil,    38,    39,    36,    37,    32,
    33,    34,    35,    30,    31,    29,    28,    27,   nil,    38,
    39,    36,    37,    32,    33,    34,    35,    30,    31,    29,
    28,    27,   nil,    38,    39,    36,    37,    32,    33,    34,
    35,    30,    31,    29,    28,    27,   nil,    38,    39,    36,
    37,    32,    33,    34,    35,    30,    31,    29,    28,    27,
   nil,    38,    39,    36,    37,    32,    33,    34,    35,    30,
    31,    29,    28,    27,   nil,    38,    39,    36,    37,    32,
    33,    34,    35,    30,    31,    29,    27,   nil,    38,    39,
    36,    37,    32,    33,    34,    35,    30,    31,    27,   nil,
    38,    39,    36,    37,    32,    33,    34,    35,    27,   nil,
    38,    39,    36,    37,    32,    33,    34,    35 ]

racc_action_check = [
    73,    73,    73,    73,    73,    73,    73,    73,    73,    73,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
    52,    44,    52,    52,    52,    52,    73,    58,    73,    53,
    73,    53,    53,    53,    53,    74,     2,    74,     2,    67,
    67,    67,    67,    67,    67,    67,    67,    67,    67,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    54,
    65,    54,    54,    54,    54,    67,    55,    67,    55,    55,
    55,    55,    20,    47,    20,     0,    59,     0,    70,    70,
    27,    70,    70,    70,    70,    70,    70,    70,    43,    43,
    24,    43,    43,    43,    43,    43,    43,    43,    56,    22,
    56,    56,    42,    42,    70,    42,    42,    42,    42,    42,
    42,    42,    68,    68,    43,    68,    68,    68,    68,    68,
    68,    68,    57,    21,    57,    57,    23,    23,    42,    23,
    23,    23,    23,    23,    23,    23,    41,    41,    68,    41,
    41,    41,    41,    41,    41,    41,    61,    71,    61,    71,
    39,    39,    23,    39,    39,    39,    39,    39,    39,    39,
    12,    12,    41,    12,    12,    12,    12,    12,    12,    12,
     1,    76,    77,   nil,    28,    28,    39,    28,    28,    28,
    28,    28,    28,    28,    29,    29,    12,    29,    29,    29,
    29,    29,    29,    29,   nil,   nil,   nil,   nil,    30,    30,
    28,    30,    30,    30,    30,    30,    30,    30,    31,    31,
    29,    31,    31,    31,    31,    31,    31,    31,   nil,   nil,
   nil,   nil,    32,    32,    30,    32,    32,    32,    32,    32,
    32,    32,    33,    33,    31,    33,    33,    33,    33,    33,
    33,    33,   nil,   nil,   nil,   nil,    34,    34,    32,    34,
    34,    34,    34,    34,    34,    34,    35,    35,    33,    35,
    35,    35,    35,    35,    35,    35,   nil,   nil,   nil,   nil,
    36,    36,    34,    36,    36,    36,    36,    36,    36,    36,
    37,    37,    35,    37,    37,    37,    37,    37,    37,    37,
   nil,   nil,   nil,   nil,    38,    38,    36,    38,    38,    38,
    38,    38,    38,    38,   nil,    45,    37,    45,    45,    45,
    45,    45,    45,    45,    45,    45,    45,    45,    45,   nil,
    38,   nil,   nil,    40,    45,    40,    40,    40,    40,    40,
    40,    40,    40,    40,    40,    40,    40,   nil,   nil,    64,
    40,    64,    64,    64,    64,    64,    64,    64,    64,    64,
    64,    64,    64,    63,   nil,    63,    63,    63,    63,    63,
    63,    63,    63,    63,    63,    63,    63,    75,   nil,    75,
    75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
    75,     3,   nil,     3,     3,     3,     3,     3,     3,     3,
     3,     3,     3,     3,     3,    25,   nil,    25,    25,    25,
    25,    25,    25,    25,    25,    25,    25,    25,    25,    62,
   nil,    62,    62,    62,    62,    62,    62,    62,    62,    62,
    62,    62,    62,    48,   nil,    48,    48,    48,    48,    48,
    48,    48,    48,    48,    48,    48,    49,   nil,    49,    49,
    49,    49,    49,    49,    49,    49,    49,    49,    50,   nil,
    50,    50,    50,    50,    50,    50,    50,    50,    51,   nil,
    51,    51,    51,    51,    51,    51,    51,    51 ]

racc_action_pointer = [
    47,   170,     8,   369,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   158,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    46,    97,    89,   124,    90,   383,   nil,    70,   172,   182,
   196,   206,   220,   230,   244,   254,   268,   278,   292,   148,
   311,   134,   100,    86,    -7,   293,   nil,    45,   411,   424,
   436,   446,     8,    17,    47,    54,    86,   110,    15,    64,
   nil,   119,   397,   341,   327,    50,   nil,    37,   110,   nil,
    76,   120,   nil,    -2,     8,   355,   140,   162,   nil,   nil,
   nil,   nil ]

racc_action_default = [
    -1,   -48,    -2,    -3,    -6,    -7,    -8,    -9,   -10,   -11,
   -12,   -13,   -48,   -15,   -16,   -17,   -18,   -19,   -20,   -21,
   -48,   -39,   -48,   -48,   -48,    -4,    -5,   -48,   -48,   -48,
   -48,   -48,   -48,   -48,   -48,   -48,   -48,   -48,   -48,   -48,
   -48,   -24,   -48,   -48,   -48,   -48,    82,   -48,   -27,   -28,
   -29,   -30,   -31,   -32,   -33,   -34,   -35,   -36,   -37,   -38,
   -14,   -48,   -25,   -40,   -41,   -43,   -46,   -48,   -24,   -22,
   -48,   -48,   -44,   -48,   -48,   -26,   -48,   -48,   -47,   -23,
   -42,   -45 ]

racc_goto_table = [
    26,    25,    71,     2,     1,   nil,   nil,   nil,    66,   nil,
   nil,    40,   nil,   nil,   nil,   nil,    61,   nil,   nil,   nil,
   nil,   nil,    45,   nil,   nil,   nil,   nil,    48,    49,    50,
    51,    52,    53,    54,    55,    56,    57,    58,    59,    80,
    62,    63,    64,    74,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    62,   nil,    75,
    73,    26,    25 ]

racc_goto_check = [
     4,     3,    13,     2,     1,   nil,   nil,   nil,    14,   nil,
   nil,     3,   nil,   nil,   nil,   nil,    12,   nil,   nil,   nil,
   nil,   nil,     3,   nil,   nil,   nil,   nil,     3,     3,     3,
     3,     3,     3,     3,     3,     3,     3,     3,     3,    14,
     3,     3,     3,    12,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     3,   nil,     3,
     2,     4,     3 ]

racc_goto_pointer = [
   nil,     4,     3,    -1,    -2,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   -25,   -63,   -37 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5,     6,     7,     8,     9,
    10,    11,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 34, :_reduce_1,
  1, 34, :_reduce_2,
  1, 35, :_reduce_3,
  2, 35, :_reduce_4,
  2, 35, :_reduce_5,
  1, 35, :_reduce_6,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  3, 36, :_reduce_14,
  1, 37, :_reduce_none,
  1, 37, :_reduce_none,
  1, 38, :_reduce_17,
  1, 38, :_reduce_18,
  1, 38, :_reduce_19,
  1, 38, :_reduce_20,
  1, 38, :_reduce_21,
  4, 39, :_reduce_22,
  6, 39, :_reduce_23,
  0, 45, :_reduce_24,
  1, 45, :_reduce_25,
  3, 45, :_reduce_26,
  3, 40, :_reduce_27,
  3, 40, :_reduce_28,
  3, 40, :_reduce_29,
  3, 40, :_reduce_30,
  3, 40, :_reduce_31,
  3, 40, :_reduce_32,
  3, 40, :_reduce_33,
  3, 40, :_reduce_34,
  3, 40, :_reduce_35,
  3, 40, :_reduce_36,
  3, 40, :_reduce_37,
  3, 40, :_reduce_38,
  1, 41, :_reduce_39,
  3, 42, :_reduce_40,
  3, 42, :_reduce_41,
  6, 43, :_reduce_42,
  0, 46, :_reduce_none,
  1, 46, :_reduce_44,
  3, 46, :_reduce_45,
  3, 44, :_reduce_46,
  3, 47, :_reduce_47 ]

racc_reduce_n = 48

racc_shift_n = 82

racc_token_table = {
  false => 0,
  :error => 1,
  :IF => 2,
  :FUNC => 3,
  :NEWLINE => 4,
  :NUMBER => 5,
  :STRING => 6,
  :TRUE => 7,
  :FALSE => 8,
  :NULL => 9,
  :IDENTIFIER => 10,
  :CONSTANT => 11,
  "." => 12,
  "!" => 13,
  "*" => 14,
  "/" => 15,
  "+" => 16,
  "-" => 17,
  ">" => 18,
  ">=" => 19,
  "<" => 20,
  "<=" => 21,
  "==" => 22,
  "!=" => 23,
  "&&" => 24,
  "||" => 25,
  "=" => 26,
  "," => 27,
  "(" => 28,
  ")" => 29,
  ";" => 30,
  "{" => 31,
  "}" => 32 }

racc_nt_base = 33

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IF",
  "FUNC",
  "NEWLINE",
  "NUMBER",
  "STRING",
  "TRUE",
  "FALSE",
  "NULL",
  "IDENTIFIER",
  "CONSTANT",
  "\".\"",
  "\"!\"",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "\">\"",
  "\">=\"",
  "\"<\"",
  "\"<=\"",
  "\"==\"",
  "\"!=\"",
  "\"&&\"",
  "\"||\"",
  "\"=\"",
  "\",\"",
  "\"(\"",
  "\")\"",
  "\";\"",
  "\"{\"",
  "\"}\"",
  "$start",
  "Root",
  "Expressions",
  "Expression",
  "Terminator",
  "Literal",
  "Call",
  "Operator",
  "Constant",
  "Assign",
  "Func",
  "If",
  "ArgList",
  "ParamList",
  "Block" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'grammar.y', 40)
  def _reduce_1(val, _values, result)
     result = Nodes.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 41)
  def _reduce_2(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 46)
  def _reduce_3(val, _values, result)
     result = Nodes.new(val) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 47)
  def _reduce_4(val, _values, result)
     result = val[0] << val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 49)
  def _reduce_5(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 50)
  def _reduce_6(val, _values, result)
     result = Nodes.new([]) 
    result
  end
.,.,

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

module_eval(<<'.,.,', 'grammar.y', 62)
  def _reduce_14(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 15 omitted

# reduce 16 omitted

module_eval(<<'.,.,', 'grammar.y', 73)
  def _reduce_17(val, _values, result)
     result = NumberNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 74)
  def _reduce_18(val, _values, result)
     result = StringNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 75)
  def _reduce_19(val, _values, result)
     result = TrueNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 76)
  def _reduce_20(val, _values, result)
     result = FalseNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 77)
  def _reduce_21(val, _values, result)
     result = NullNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 85)
  def _reduce_22(val, _values, result)
     result = CallNode.new(nil, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 89)
  def _reduce_23(val, _values, result)
     result = CallNode.new(val[0], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 93)
  def _reduce_24(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 94)
  def _reduce_25(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 95)
  def _reduce_26(val, _values, result)
     result = val[0] << val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 100)
  def _reduce_27(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 101)
  def _reduce_28(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 102)
  def _reduce_29(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 103)
  def _reduce_30(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 104)
  def _reduce_31(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 105)
  def _reduce_32(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 106)
  def _reduce_33(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 107)
  def _reduce_34(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 108)
  def _reduce_35(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 109)
  def _reduce_36(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 110)
  def _reduce_37(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 111)
  def _reduce_38(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 115)
  def _reduce_39(val, _values, result)
     result = GetConstantNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 120)
  def _reduce_40(val, _values, result)
     result = SetLocalNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 121)
  def _reduce_41(val, _values, result)
     result = SetLocalNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 127)
  def _reduce_42(val, _values, result)
     result = FuncNode.new(val[1], val[3], val[5]) 
    result
  end
.,.,

# reduce 43 omitted

module_eval(<<'.,.,', 'grammar.y', 132)
  def _reduce_44(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 133)
  def _reduce_45(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 138)
  def _reduce_46(val, _values, result)
     result = IfNode.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 143)
  def _reduce_47(val, _values, result)
     result = val[1] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser


end # End the module
